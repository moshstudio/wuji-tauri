export interface ComicChapter {
  id: string;
  title: string;
  url?: string;
  readingPage?: number;
}

export type ChapterList = ComicChapter[];
export interface ComicItem {
  id: string;
  title: string;
  intro?: string;
  cover?: string;
  coverHeaders?: Record<string, string> | null;
  author?: string;
  tags?: string[] | string;
  status?: string;
  latestChapter?: string | ComicChapter;
  latestUpdate?: string;
  url?: string;
  chapters?: ChapterList;
  extra?: any;
  sourceId: string;
}

/**
 * Queries comic elements from a document based on specified tag selectors
 * @param body The document to query elements from
 * @param tags An object mapping comic item properties to CSS selectors
 * @returns A promise that resolves to an array of ComicItem objects
 */
export declare function queryComicElements(
  body: Document,
  tags: {
    element?: string;
    cover?: string;
    title?: string;
    intro?: string;
    author?: string;
    tags?: string;
    status?: string;
    url?: string;
    latestChapter?: string;
    latestUpdate?: string;
  },
): Promise<ComicItem[]>;
